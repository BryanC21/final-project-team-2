*** note: may need to include sudo before every command
    also run these commands in the root folder ***

*** working- websocket container, backend api server, need to npm start, node gateway in terminal ***
*** in progres: all can be in container, not getting 500 error, but it isn't able to connect to mongodb cluster ***


*** front end (takes care of npm start) *** --- WIP
sudo docker build -f ./docker_files/front_end.Dockerfile -t front_end --no-cache .
sudo docker run -t -d -p 3000:3000 --network=667final front_end

*** back end (takes care of node apiserver) *** --- works
sudo docker build -f ./docker_files/back_end.Dockerfile -t back_end --no-cache .
sudo docker run -t -d -p 5000:5000 --network=667final back_end

*** websocket (takes care of node websocketserver) *** --- works
sudo docker build -f ./docker_files/websocket.Dockerfile -t websocket --no-cache .
sudo docker run -t -d -p 8080:8080 --network=667final websocket

*** gateway (takes care of node gateway) *** --- WIP
sudo docker build -f ./docker_files/gateway.Dockerfile -t gateway --no-cache .
sudo docker run -t -d -p 4000:4000 --network=667final gateway


*** mongo needed ? ***
sudo docker run --name mongodb -d mongo:3.6.21-xenial

*** to stop container ***
docker container stop <container id>

*** other useful commands ***
** show all containers (processes running and stopped)
docker ps -a 

** remove stopped container, add -f arg to force it to stop and remove **
docker rm <container id>

** show docker images **
docker image ls

** remove image **
docker rmi <image id>

*** removed exited container ***
docker rm $(docker ps -q -f status=exited)

*** docker network ***
docker network create <name>
docker network ls

** when you edit docker files, should remove old images and rerun the build and run stuff **
** also remove old containers **
